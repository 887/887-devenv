set -g default-terminal "screen-256color"
set -g default-command "{$SHELL}"

# start window numbering at 1 for easier switching
set -g base-index 1

set-option -g allow-rename off

set -g xterm-keys on
set -sg escape-time 0

#VI MODE
setw -g mode-keys vi
set -g status-keys vi

# rebind pane tiling
bind V split-window -h
bind H split-window

# smart pane switching with awareness of vim splits
bind h select-pane -L
bind g select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# bind-key -r C-h select-window -t :-
# bind-key -r C-l select-window -t :+
bind -r C-k resize-pane -U
bind -r C-j resize-pane -D
#c-h is one of those special keys that sends something else.. need to bin c-g as a workarround
#bind -r C-h resize-pane -L
bind -r C-g resize-pane -L
bind -r C-l resize-pane -R

# Copy and pasting
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection
#.. This has been renamed: https://github.com/tmux/tmux/issues/592
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

set -g mouse on

bind -r M-k swap-window -t -1
bind -r M-j swap-window -t +1
bind -r M-l next-window
bind -r M-h previous-window

bind -n C-Left swap-window -t -1
bind -n C-Right swap-window -t +1
bind -n M-Up next-window
bind -n M-Up previous-window

#Scrolling issues
#If you have issues scrolling with Shift-Page Up/Down in your terminal, the following will remove the smcup and rmcup capabilities for any term that reports itself as anything beginning with xterm:
#set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# rebind ctrl+b to ctrl-a (easier to reach! (also used by gnu-screen))
unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix

#create and edit the < out then append here!!!
#in vim run ":TmuxlineSnapshot .tmuxline.snapshot" to create and uncomment the following to test
#if-shell "test -f .tmuxline.snapshot" "source .tmuxline.snapshot"
#edit the content and append below !!!


# This tmux statusbar config was created by tmuxline.vim
# on Wed, 22 Jun 2016

set -g status-bg "colour235"
# set -g message-command-fg "colour222"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
# set -g pane-active-border-fg "colour154"
# set -g message-bg "colour238"
set -g status-right-length "100"
# set -g status-right-attr "none"
# set -g message-fg "colour222"
# set -g message-command-bg "colour238"
# set -g status-attr "none"
# set -g pane-border-fg "colour238"
# set -g status-left-attr "none"
# setw -g window-status-fg "colour121"
# setw -g window-status-attr "none"
# setw -g window-status-activity-bg "colour235"
# setw -g window-status-activity-attr "none"
# setw -g window-status-activity-fg "colour154"
setw -g window-status-separator ""
# setw -g window-status-bg "colour235"
set -g status-left "#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour235,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] %Y-%m-%d  %H:%M #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour154] #h "
setw -g window-status-format "#[fg=colour121,bg=colour235] #I #[fg=colour121,bg=colour235] #W "
setw -g window-status-current-format "#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I #[fg=colour222,bg=colour238] #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]"

#create new paths relative to current pane https://unix.stackexchange.com/questions/12032/create-new-window-with-current-directory-in-tmux
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

#yank tmux to system clipboard
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @shell_mode 'vi'

#make tmux resurrect itself after sytem restart etc
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
#auto restore.. way to unstable if you ask me
#set -g @continuum-restore 'on'
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'
#set -g @resurrect-capture-pane-contents 'on'

#https://github.com/tmux-plugins/tpm
#git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

