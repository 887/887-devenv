# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000000
SAVEHIST=1000000
unsetopt beep

#https://dougblack.io/words/zsh-vi-mode.html
# Vi mode
bindkey -v
export KEYTIMEOUT=1

# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '$HOME/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall

#https://github.com/bhilburn/powerlevel9k#prompt-customization
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir rbenv vcs)
#POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs history time)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()

#prompt damoekri
#prompt sorin
#prompt powerline
prompt powerlevel9k

source ~/zsh-history-substring-search.zsh
# OPTION 1: for most systems
zmodload zsh/terminfo
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

export TERM=xterm-256color

#this prevents switching to the menu
#unsetopt automenu

#this works but you have to use arrowkeys and press ctl+x 1
##-*-shell-script-*-
#autoload predict-on
#autoload predict-off

## you may also wish to bind it to some keys...
#zle -N predict-on
#zle -N predict-off
#bindkey '^X1' predict-on
#bindkey '^X2' predict-off


#fish like autocompletion.. exactly what the doctor ordered :)
#https://github.com/zsh-users/zsh-autosuggestions
#https://asciinema.org/a/37390
#git clone git://github.com/zsh-users/zsh-autosuggestions ~/.zsh/zsh-autosuggestions
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

alias vim="nvim"
alias nvim="/usr/bin/nvim -O"

#THE PATH/ENV CHANGES AND THESE SETTINGS ARE DONE IN
#for bash:.bash_profile
#for zsh: .zprofile (at the bottom)
#for all shells: .profile (this gets overwritten by the individual shell files and isn't good for path changes)
#.xprofile: for desktop apps
#
#export PATH="$HOME/.cargo/bin:$HOME/.gem/ruby/2.3.0/bin:$HOME/.cabal/bin:$PATH"
#export CARGO_HOME="$HOME/.cargo"
#export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
#export RUST_BACKTRACE=0


#echo "test"
export CARGO_HOME="$HOME/.cargo"
source "$HOME/.cargo/env"
#export RUST_SRC_PATH="$HOME/rustc-nightly/src"
export RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
#off!
export RUST_BACKTRACE=0


export EDITOR='vim'
export VISUAL='vim'
export PAGER='less'

# open fzf window with dirs and cd into it
function quick_find () {
    dir=$(find $PWD -not -path '*/\.*' -type d -maxdepth 2 | fzf)
    if [ ! -z "$dir" ]; then
        zle kill-buffer
        LBUFFER="cd '$dir' && ls"
    fi
    # dir=$(find $PWD ~ -not -path '*/\.*' -type d -maxdepth 1 | fzf)
    # LBUFFER="$dir"
    # cd $DIR
    # echo -ne ""
    # clear_cmdline
}

zle -N quick_find_widget quick_find           # define a widget for the func above
bindkey "^p" quick_find_widget     # remap ^i to the widget -> func

